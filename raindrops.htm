<html>
	<head>
		<title>Raindrops</title>
		<style type="text/css">
			*{margin:0; padding:0;}
			body{background-color:#000000;}
			#svg{height:100%; width:100%;}
		</style>
	</head>
	<body>
		<svg id="svg" xmlns="http://www.w3.org/2000/svg"></svg>
		<script type="text/javascript">
			function makeSVG(tag, attrs) {
				var el= document.createElementNS('http://www.w3.org/2000/svg', tag);
				for (var k in attrs)
					{
						el.setAttribute(k, attrs[k]);
					}
				return el;
			}
			//Model of how to draw a circle
				// circle = makeSVG('circle', {cx:200, cy:300, r:80, style:"stroke:#ffffff; stroke-width:1; fill:#bbbbbb"})
				// document.getElementById('svg').appendChild(circle);

			//function to draw a circle with passed location (x, y), radius (rad), and colour (r,g,b,a)
			function makeCircle(id,x,y,rad,r,g,b){
				circle = makeSVG('circle', {id:id, cx:x, cy:y, r:rad, style:"stroke:rgba("+Math.floor(r+10)+", "+Math.floor(g+10)+", "+Math.floor(b+10)+", "+a+"); stroke-width:2; fill:rgba("+Math.floor(r)+", "+Math.floor(g)+", "+Math.floor(b)+", "+a+")"});
				document.getElementById('svg').appendChild(circle);
			};
			//function to update a circle with passed specs (id, location (x, y), radius, colour (r,g,b)
			function updateCircle(specs){
				document.getElementById(specs.id).setAttribute('r', specs.radius); 
				document.getElementById(specs.id).setAttribute('style', "stroke:rgba("+Math.floor(specs.rgba_r+10)+", "+Math.floor(specs.rgba_g+10)+", "+Math.floor(specs.rgba_b+10)+", "+a+"); stroke-width:2; 	fill:rgba("+Math.floor(specs.rgba_r)+", "+Math.floor(specs.rgba_g)+", "+Math.floor(specs.rgba_b)+", "+a+")");
			}

			//get browser window dimensions and determine max dimension

			var browserDimensions={};
			browserDimensions['x']=window.innerWidth;
			browserDimensions['y']=window.innerHeight;
				console.log(browserDimensions['x'], browserDimensions['y']);

			if(browserDimensions['x']>browserDimensions['y']){maxDimension=browserDimensions['x']}
				else{maxDimension=browserDimensions['y']};

			//declare variables for drawing circles -- location (x, y), radius (rad), and colour (r,g,b,a) 
			var x, y, rad, r, g, b;
			var a=.9;
			//declare object for storing the raindrops' variables and a counter for tracking raindrop id's
			var raindrops={};
			var oildrops={};
			var oildribbles={};
			var counter=1;
			var oildrop_counter=1;
			var oildribble_counter=1;

			//creating a new Raindrop
			function newRaindrop(){
				// console.log('drop');
				rad=Math.floor(Math.random()*40)+20, 
				x=Math.floor(Math.random()*browserDimensions['x']),
				y=Math.floor(Math.random()*browserDimensions['y']),
				gray=Math.floor(Math.random()*60)+180;
				r=g=b=gray,
				raindrops[counter]={cx:x, cy:y, radius:rad, rgba_r:r, rgba_g:g, rgba_b:b, id:counter}
				makeCircle(counter,x,y,rad,r,g,b);
				counter++;
			}

			function updateRaindrop(){
				// console.log('spread and fade');
				raindrop_check=0;
				var rad_increment=2;
				for(raindrop in raindrops){
					if(raindrops[raindrop].rgba_r<-10 || raindrops[raindrop].rgba_g<-10 || raindrops[raindrop].rgba_b<-10 ){
						var el=document.getElementById(raindrop);
						document.getElementById('svg').removeChild(el);
						delete raindrops[raindrop];
					}
					else{
						rad=raindrops[raindrop].radius+rad_increment;
						var colour=this.raindrops[raindrop].rgba_r-2;
						raindrops[raindrop].radius=rad;
						raindrops[raindrop].rgba_r=colour;
						raindrops[raindrop].rgba_g=colour;
						raindrops[raindrop].rgba_b=colour;
						var circle_specs=raindrops[raindrop];
						updateCircle(circle_specs);
						raindrop_check++;
					}
				}
				return raindrop_check;
			}

			//creating a new Oildrop
			function newOilDrop(x,y){
				// console.log('oil drop');
				rad=Math.floor(Math.random()*60)+60, 
				x=x,
				y=y,
				r=(Math.floor(Math.random()*8+1))*31,
				g=(Math.floor(Math.random()*8+1))*31;
				if(r==0 && g==0){b=(Math.floor(Math.random()*7+2))*31;}
					else if(r==252 && g==252){b=(Math.floor(Math.random()*7+1))*31;}
					else{b=(Math.floor(Math.random()*8+1))*31;}
				var oildrop_id='oildrop_'+oildrop_counter;
				oildrops[oildrop_id]={cx:x, cy:y, radius:rad, rgba_r:r, rgba_g:g, rgba_b:b, id:oildrop_id}
				makeCircle(oildrop_id,x,y,rad,r,g,b);
				oildrop_check++;
				oildrop_counter++;
			}

			function updateOildrop(){
				// console.log('spread and fade');
				var rad_increment=1;
				for(oildrop in oildrops){
					if((oildrops[oildrop].rgba_r==0 && oildrops[oildrop].rgba_g==0 && oildrops[oildrop].rgba_b==0) || 
						(oildrops[oildrop].radius<=rad_increment)){
						var el=document.getElementById(oildrop);
						document.getElementById('svg').removeChild(el);
						delete oildrops[oildrop];
						oildrop_check--;
					}
					else{
						rad=oildrops[oildrop].radius-rad_increment;
						oildrops[oildrop].radius=rad;
						if(oildrops[oildrop].rgba_r>3){oildrops[oildrop].rgba_r-=3}
							else{oildrops[oildrop].rgba_r=0};
						if(oildrops[oildrop].rgba_g>3){oildrops[oildrop].rgba_g-=3}
							else{oildrops[oildrop].rgba_g=0};
						if(oildrops[oildrop].rgba_b>3){oildrops[oildrop].rgba_b-=3}
							else{oildrops[oildrop].rgba_b=0};
						var circle_specs=oildrops[oildrop];
						updateCircle(circle_specs);
						oildrop_check++;
					}
				}
				return oildrop_check;
			}

			function newOildribble(x,y){
				// console.log('oil drop');
				rad=Math.floor(Math.random()*20)+10, 
				x=x,
				y=y,
				r=(Math.floor(Math.random()*4+5))*31,
				g=(Math.floor(Math.random()*4+5))*31;
				if(r==0 && g==0){b=(Math.floor(Math.random()*3+6))*31;}
					else if(r==252 && g==252){b=(Math.floor(Math.random()*4+4))*31;}
					else{b=(Math.floor(Math.random()*4+5))*31;}
				var oildribble_id='oildribble_'+oildribble_counter;
				oildribbles[oildribble_id]={cx:x, cy:y, radius:rad, rgba_r:r, rgba_g:g, rgba_b:b, id:oildribble_id}
				makeCircle(oildribble_id,x,y,rad,r,g,b);
				oildribble_check++;
				oildribble_counter++;
			}

			function updateOildribble(){
				// console.log('spread and fade');
				var rad_increment=2;
				for(oildribble in oildribbles){
					if((oildribbles[oildribble].rgba_r==0 && oildribbles[oildribble].rgba_g==0 && oildribbles[oildribble].rgba_b==0) || 
						(oildribbles[oildribble].radius<=rad_increment)){
						var el=document.getElementById(oildribble);
						document.getElementById('svg').removeChild(el);
						delete oildribbles[oildribble];
						oildribble_check--;
					}
					else{
						rad=oildribbles[oildribble].radius-rad_increment;
						oildribbles[oildribble].radius=rad;
						if(oildribbles[oildribble].rgba_r>2){oildribbles[oildribble].rgba_r+=2}
							else{oildribbles[oildribble].rgba_r=0};
						if(oildribbles[oildribble].rgba_g>2){oildribbles[oildribble].rgba_g+=2}
							else{oildribbles[oildribble].rgba_g=0};
						if(oildribbles[oildribble].rgba_b>2){oildribbles[oildribble].rgba_b+=2}
							else{oildribbles[oildribble].rgba_b=0};
						var circle_specs=oildribbles[oildribble];
						updateCircle(circle_specs);
						oildribble_check++;
					}
				}
				return oildribble_check;
			}

			var chance=1;
			var raindrop_check=0;
			var oildrop_check=0;
			var oildribble_check=0;

// var time_sum=0;
// var time_count=0;
// var time_last=0;
			function puddle(){
// var d = new Date();
// var time_new = d.getTime();
				if(chance-(raindrop_check/16)>.5){
					newRaindrop();
				}
				updateRaindrop();
				if(raindrop_check<1){chance=1;}
					else if(raindrop_check>16){chance=0;}
					else{chance=Math.random();};
				if(oildrop_check>0){updateOildrop();};
				if(oildribble_check>0){
					updateOildribble();
				}
// if(time_last>0){
// 	time_sum+=time_new-time_last;
// 	time_count++;
// 	console.log(time_new-time_last, time_sum/time_count, raindrop_check);
// }
// time_last=time_new;
			}

			document.onclick = function(e){
				newOilDrop(e.x,e.y);
			}
			document.onmousemove = function(e){
				newOildribble(e.x,e.y);
			}
			setInterval(puddle, 100);
		</script>
	</body>
</html>